// This program counts in s all the prime numbers up to m.

int i, m, n, q, r, s, t, x, y, z;
m = 10;  n = 2;
while (n <= m) {
  // checking primality of n and writing t to 1 or 0
  i = 2;  q = n/i;  t = 1;
  while (i<=q && 1<=t) {
    x = i;
    y = q;
    // fast multiplication (base 2) algorithm
    z = 0;
    while (!(x <= 0)) {
      q = x/2;
      r = q+q+1;
      if (r <= x) { z = z+y; } else {}
      x = q;
      y = y+y;
    } // end fast multiplication
    if (n <= z) { t = 0; } else { i = i+1;  q = n/i; }
  } // end checking primality
  if (1 <= t) { s = s+1; } else {}
  n = n+1;
}

// s should be 4 when m = 10.


//using concrete execution
//with
// [2217, 1.018 s]
// [2217, 1.022 s]
// [2217, 1.012 s]
// [2217, 1.065 s]
// [2217, 1.088 s]
// [2217, 1.027 s]
// [2217, 1.033 s]
// [2217, 1.053 s]
// [2217, 1.017 s]
// [2217, 1.053 s]

//without
// [2217, 1.081 s]
// [2217, 1.059 s]
// [2217, 1.049 s]
// [2217, 1.045 s]
// [2217, 1.075 s]
// [2217, 1.075 s]
// [2217, 1.047 s]
// [2217, 1.046 s]
// [2217, 1.071 s]
// [2217, 1.048 s]


// Non Concrete Execution using most general sort
// with
//  1.372, 1.195, 1.088, 1.091, 1.300, 1.275, 1.202, 1.353, 1.243, 1.296

//without
//  1.080, 1.075, 1.559, 1.403, 1.302, 1.225, 1.279, 1.363, 1.228, 1.126
