/*
Running instructions:

  krun programs/pgm-1.imp --parser="kast -groundParser" --search

This program coresponds to the following reachability formula:
<k>
L1 : while (y <= b)
L2 : {
  b = b - y;
  a = a + 1;
}
</k>
<state> a |-> A b |-> B x |-> X y |-> Y </state>
<condition> X ==Int A *Int Y +Int B andBool B >=Int 0 </condition>
=>
<k> .K </k>
<state> a |-> A' b |-> B' x |-> X y |-> Y </state>
<condition> X ==Int A' *Int Y +Int B' andBool B' >=Int 0 andBool B' <Int Y </condition>
*/

<k>
if (y <= b) {
(ll2 : {
  b = b - y; 
  a = a + 1;
})
(ll1 : while (y <= b) {
  b = b - y; 
  a = a + 1;
})} else {}
~> check1
</k>
<state> a |-> #symInt(a) b |-> #symInt(b) x |-> #symInt(x) y |-> #symInt(y) </state>
<condition> #symInt(x) ==Int #symInt(a) *Int #symInt(y) +Int #symInt(b) andBool #symInt(b) >=Int 0 </condition>


